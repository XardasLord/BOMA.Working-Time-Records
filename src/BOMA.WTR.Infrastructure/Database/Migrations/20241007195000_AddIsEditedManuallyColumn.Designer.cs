// <auto-generated />

#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace BOMA.WTR.Infrastructure.Database.Migrations
{
    [DbContext(typeof(BomaDbContext))]
    [Migration("20241007195000_AddIsEditedManuallyColumn")]
    partial class AddIsEditedManuallyColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<int>("RcpId")
                        .HasColumnType("int")
                        .HasColumnName("RcpId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Magazyn"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Akcesoria"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Produkcja"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pakowanie"
                        },
                        new
                        {
                            Id = 5,
                            Name = ""
                        },
                        new
                        {
                            Id = 6,
                            Name = "BOMA"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Zlecenia"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Agencja"
                        });
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Entities.WorkingTimeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.Property<byte>("EventType")
                        .HasColumnType("tinyint")
                        .HasColumnName("EventType");

                    b.Property<bool>("IsEditedManually")
                        .HasColumnType("bit");

                    b.Property<byte?>("MissingRecordEventType")
                        .HasColumnType("tinyint")
                        .HasColumnName("MissingRecordEventType");

                    b.Property<DateTime>("OccuredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("OccuredAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkingTimeRecords", (string)null);
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Entities.WorkingTimeRecordAggregatedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseNormativeHours")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FiftyPercentageBonusHours")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("FinishNormalizedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishOriginalAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HundredPercentageBonusHours")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsEditedManually")
                        .HasColumnType("bit");

                    b.Property<byte?>("MissingRecordEventType")
                        .HasColumnType("tinyint")
                        .HasColumnName("MissingRecordEventType");

                    b.Property<decimal>("NightHours")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("SaturdayHours")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartNormalizedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartOriginalAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("WorkedHoursRounded")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("WorkedMinutes")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkingTimeRecordAggregatedHistories", (string)null);
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Employee", b =>
                {
                    b.HasOne("BOMA.WTR.Domain.AggregateModels.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BOMA.WTR.Domain.AggregateModels.ValueObjects.JobInformation", "JobInformation", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<byte?>("ShiftType")
                                .HasColumnType("tinyint")
                                .HasColumnName("ShiftType");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsOne("BOMA.WTR.Domain.AggregateModels.ValueObjects.Position", "Position", b2 =>
                                {
                                    b2.Property<int>("JobInformationEmployeeId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .HasMaxLength(64)
                                        .HasColumnType("nvarchar(64)")
                                        .HasColumnName("Position");

                                    b2.HasKey("JobInformationEmployeeId");

                                    b2.ToTable("Employees");

                                    b2.WithOwner()
                                        .HasForeignKey("JobInformationEmployeeId");
                                });

                            b1.Navigation("Position")
                                .IsRequired();
                        });

                    b.OwnsOne("BOMA.WTR.Domain.AggregateModels.ValueObjects.Money", "Salary", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("money")
                                .HasDefaultValue(0m)
                                .HasColumnName("BaseSalaryAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("PLN")
                                .HasColumnName("Currency");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("BOMA.WTR.Domain.AggregateModels.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("LastName");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("BOMA.WTR.Domain.AggregateModels.ValueObjects.PercentageBonus", "SalaryBonusPercentage", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasColumnType("money")
                                .HasColumnName("PercentageBonusSalary");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Department");

                    b.Navigation("JobInformation")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Salary")
                        .IsRequired();

                    b.Navigation("SalaryBonusPercentage")
                        .IsRequired();
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Entities.WorkingTimeRecord", b =>
                {
                    b.HasOne("BOMA.WTR.Domain.AggregateModels.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BOMA.WTR.Domain.AggregateModels.Employee", null)
                        .WithMany("WorkingTimeRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Entities.WorkingTimeRecordAggregatedHistory", b =>
                {
                    b.HasOne("BOMA.WTR.Domain.AggregateModels.Employee", null)
                        .WithMany("WorkingTimeRecordAggregatedHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BOMA.WTR.Domain.AggregateModels.Entities.EmployeeSalaryAggregatedHistory", "SalaryInformation", b1 =>
                        {
                            b1.Property<int>("WorkingTimeRecordAggregatedHistoryId")
                                .HasColumnType("int");

                            b1.Property<decimal>("AdditionalSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("Base100PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("Base50PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BaseSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BaseSaturdaySalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BonusBase100PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BonusBase50PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BonusBaseSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BonusBaseSaturdaySalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("BonusSumSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("FinalSumSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossBase100PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossBase50PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossBaseSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossBaseSaturdaySalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossSumBase100PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossSumBase50PercentageSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossSumBaseSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("GrossSumBaseSaturdaySalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("HolidaySalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("NightBaseSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<double>("NightWorkedHours")
                                .HasColumnType("float");

                            b1.Property<decimal>("PercentageBonusSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.Property<decimal>("SicknessSalary")
                                .HasColumnType("decimal(10,2)");

                            b1.HasKey("WorkingTimeRecordAggregatedHistoryId");

                            b1.ToTable("WorkingTimeRecordAggregatedHistories");

                            b1.WithOwner()
                                .HasForeignKey("WorkingTimeRecordAggregatedHistoryId");
                        });

                    b.Navigation("SalaryInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("BOMA.WTR.Domain.AggregateModels.Employee", b =>
                {
                    b.Navigation("WorkingTimeRecordAggregatedHistories");

                    b.Navigation("WorkingTimeRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
